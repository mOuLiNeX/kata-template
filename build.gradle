plugins {
    id 'java'
    id 'jacoco'
    id 'info.solidsoft.pitest' version '1.6.0'
    id "com.github.ben-manes.versions" version "0.38.0"
}

group 'kata'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml {
            enabled true
            destination file("${buildDir}/reports/jacoco/report.xml")
        }
        html.enabled true
        csv.enabled false
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.+'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.assertj:assertj-core:3.+'
}

pitest {
    junit5PluginVersion = '0.12'
    threads = 2
    outputFormats = ['HTML']
}

test {
    useJUnitPlatform()
}

apply plugin: 'com.github.ben-manes.versions'

// To disallow release candidates as upgradable versions
def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    checkForGradleUpdate = true

    // Reject all non stable versions
    rejectVersionIf {
        isNonStable(candidate.version)
    }

    // Disallow release candidates as upgradable versions from stable versions
    rejectVersionIf {
        isNonStable(candidate.version) && !isNonStable(currentVersion)
    }

    resolutionStrategy {
        componentSelection {
            all {
                if (isNonStable(candidate.version) && !isNonStable(currentVersion)) {
                    reject('Release candidate')
                }
            }
        }
    }
}